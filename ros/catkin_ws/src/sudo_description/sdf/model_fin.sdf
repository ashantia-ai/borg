<?xml version="1.0"?>
<sdf version="1.4">
  <model name="sudo">

    <!-- Pioneer 2 Chassis-->
    <link name="chassis">
      <pose>0 0 0.16 0 0 0</pose>
      <inertial>
        <mass>6.0</mass>
        <inertia>
          <ixx>0.07</ixx>
          <iyy>0.08</iyy>
          <izz>0.10</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <box>
            <size>0.445 0.25 0.15</size>
          </box>
        </geometry>
      </collision>
      <collision name="castor_collision">
        <pose>-0.200 0 -0.12 0 0 0</pose>
        <geometry>
          <sphere>
            <radius>0.04</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.0</mu>
              <mu2>0.0</mu2>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <pose>0 0 0.04 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://pioneer2dx/meshes/chassis.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="castor_visual">
        <pose>-0.200 0 -0.12 0 0 0</pose>
        <geometry>
          <sphere>
            <radius>0.04</radius>
          </sphere>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/FlatBlack</name>
          </script>
        </material>
      </visual>
    </link>
    <!-- Bottom cube of Sudo-->

    
<!-- Small webcam that Amir uses for Navigation-->
    <link name="webcam">
      <pose>0.0 0 1.0 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.07</ixx>
          <iyy>0.08</iyy>
          <izz>0.10</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <box>
            <size> 0.029 0.068 0.040</size>
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.029 0.068 0.040</size>
          </box>
        </geometry>
      </visual>
      <sensor name="camera" type="camera">
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>10</far>
          </clip>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>false</visualize>
        <!-- Plugin to simulate camera image topic in gazebo and ros-->
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	        <alwaysOn>true</alwaysOn>
	        <updateRate>30.0</updateRate>
	        <cameraName>sudo/bottom_webcam</cameraName>
	        <imageTopicName>image_raw</imageTopicName>
	        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
	        <frameName>webcam_link</frameName>
	        <!--hackBaseline>0.07</hackBaseline>
	        <distortionK1>0.0</distortionK1>
	        <distortionK2>0.0</distortionK2>
	        <distortionK3>0.0</distortionK3>
	        <distortionT1>0.0</distortionT1>
	        <distortionT2>0.0</distortionT2-->
      </plugin>
      </sensor>
    </link>
    <!-- The link for sick laser. The used model is actually hokoyu-->
    <link name="sick_laser">
      <pose>0.0 0 0.3 0 0 3.14</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.07</ixx>
          <iyy>0.08</iyy>
          <izz>0.10</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://hokuyo/meshes/hokuyo.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <collision name="collision-base">
        <pose>0 0 -0.0145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.05 0.05 0.041</size>
          </box>
        </geometry>
      </collision>

      <collision name="collision-top">
        <pose>0 0 0.0205 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.021</radius>
            <length>0.029</length>
          </cylinder>
        </geometry>
      </collision>


      <sensor type="gpu_ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>30</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>180</samples>
              <resolution>1</resolution>
              <min_angle>-1.7</min_angle>
              <max_angle>1.7</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>10.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                 achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                 reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <!-- Plugin to simulate ros laser topic in gazebo and ros-->
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
          <topicName>/sudo/laser/scan</topicName>
          <frameName>laser_link</frameName>
        </plugin>
      </sensor>
    </link>
    
    <link name="right_wheel">
      <pose>0.1 -.17 0.11 0 1.5707 1.5707</pose>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.0051</ixx>
          <iyy>0.0051</iyy>
          <izz>0.0090</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.11</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.11</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/FlatBlack</name>
          </script>
        </material>
      </visual>
    </link>
    
    <link name="left_wheel">
      <pose>0.1 .17 0.11 0 1.5707 1.5707</pose>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.0051</ixx>
          <iyy>0.0051</iyy>
          <izz>0.0090</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.11</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>0.11</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/FlatBlack</name>
          </script>
        </material>
      </visual>
    </link>


    <joint type="revolute" name="left_wheel_hinge">
      <pose>0 0 0.03 0 0 0</pose>
      <child>left_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint type="revolute" name="right_wheel_hinge">
      <pose>0 0 -0.03 0 0 0</pose>
      <child>right_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>
    
    <!-- Connection between chassis and bottom rectangular box-->
    <joint type="revolute" name="chassis_to_webcam">
      <pose>0 0 0.0 0 0 0</pose>
      <child>webcam</child>
      <parent>chassis</parent>
      <axis>
        <xyz>1 0 0</xyz>
      </axis>

    </joint>

    <!-- Connection between chassis and laser-->
    <joint type="revolute" name="laser_to_chassis">
      <pose>0.0 0 0.0 0 0 0</pose>
      <child>sick_laser</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>
    
    
	<!-- Make Sudo Move-->
    <!--plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
      <leftJoint>right_wheel_hinge</leftJoint>
      <rightJoint>left_wheel_hinge</rightJoint>
      <wheelSeparation>0.32</wheelSeparation>
      <wheelDiameter>0.22</wheelDiameter>
      <torque>2</torque>
      <wheelTorque>2</wheelTorque>
      <updateRate>30</updateRate>
      <topicName>/cmd_vel</topicName>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin-->

    <!--plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin-->




  </model>
</sdf>
